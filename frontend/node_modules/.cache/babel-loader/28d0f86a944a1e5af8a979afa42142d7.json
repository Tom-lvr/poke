{"ast":null,"code":"var _jsxFileName = \"/Users/tomoliveira/Desktop/poke/src/Widgets/Tri.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState } from 'react';\nimport Pokedata from './Pokedata';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tri = () => {\n  _s();\n\n  const [pokemonData, setPokemonData] = useState([]);\n  const [pokemonType, setPokemontype] = useState(\"\");\n  var all = [];\n\n  const getPokemon = async () => {\n    const toArray = [];\n    var i = 0;\n\n    for (i = 0; i++; i < 897) {\n      try {\n        const url = `https://pokeapi.co/api/v2/pokemon/${i}`;\n        const res = await axios.get(url);\n        toArray.push(res.data);\n        setPokemontype(res.data.types[0].type.name);\n        setPokemonData(toArray);\n        console.log(res);\n        var nom = res.data.name;\n        var hp = res.data.stats[0].base_stat;\n        var atk = res.data.stats[1].base_stat;\n        var def = res.data.stats[2].base_stat;\n        var atkSpe = res.data.stats[3].base_stat;\n        var defSpe = res.data.stats[4].base_stat;\n        var speed = res.data.stats[5].base_stat;\n        var weight = res.data.weight / 4.3;\n        var height = res.data.height * 3.9;\n        var type = res.data.types[0].type.name;\n        var pokemonActuel = new Pokedata(nom, hp, atk, def, atkSpe, defSpe, speed, i, type, weight, height);\n        all.push(pokemonActuel);\n      } catch (e) {\n        console.log(e);\n      }\n\n      ;\n    }\n  }; //alert(\"coucou\");\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"App\",\n    children: [getPokemon(), all[4].name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tri, \"GfKSxfA1Fs+GBkOoyaiI5QnWrEA=\");\n\n_c = Tri;\nexport default Tri;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tri\");","map":{"version":3,"sources":["/Users/tomoliveira/Desktop/poke/src/Widgets/Tri.js"],"names":["axios","React","useState","Pokedata","Tri","pokemonData","setPokemonData","pokemonType","setPokemontype","all","getPokemon","toArray","i","url","res","get","push","data","types","type","name","console","log","nom","hp","stats","base_stat","atk","def","atkSpe","defSpe","speed","weight","height","pokemonActuel","e"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,MAAIO,GAAG,GAAG,EAAV;;AAEA,QAAMC,UAAU,GAAG,YAAY;AAC3B,UAAMC,OAAO,GAAG,EAAhB;AACA,QAAIC,CAAC,GAAG,CAAR;;AAEA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,EAAb,EAAiBA,CAAC,GAAG,GAArB,EAA0B;AACtB,UAAI;AACA,cAAMC,GAAG,GAAI,qCAAoCD,CAAE,EAAnD;AACA,cAAME,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAUF,GAAV,CAAlB;AACAF,QAAAA,OAAO,CAACK,IAAR,CAAaF,GAAG,CAACG,IAAjB;AACAT,QAAAA,cAAc,CAACM,GAAG,CAACG,IAAJ,CAASC,KAAT,CAAe,CAAf,EAAkBC,IAAlB,CAAuBC,IAAxB,CAAd;AACAd,QAAAA,cAAc,CAACK,OAAD,CAAd;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AAEA,YAAIS,GAAG,GAACT,GAAG,CAACG,IAAJ,CAASG,IAAjB;AACA,YAAII,EAAE,GAACV,GAAG,CAACG,IAAJ,CAASQ,KAAT,CAAe,CAAf,EAAkBC,SAAzB;AACA,YAAIC,GAAG,GAAEb,GAAG,CAACG,IAAJ,CAASQ,KAAT,CAAe,CAAf,EAAkBC,SAA3B;AACA,YAAIE,GAAG,GAACd,GAAG,CAACG,IAAJ,CAASQ,KAAT,CAAe,CAAf,EAAkBC,SAA1B;AACA,YAAIG,MAAM,GAACf,GAAG,CAACG,IAAJ,CAASQ,KAAT,CAAe,CAAf,EAAkBC,SAA7B;AACA,YAAII,MAAM,GAAChB,GAAG,CAACG,IAAJ,CAASQ,KAAT,CAAe,CAAf,EAAkBC,SAA7B;AACA,YAAIK,KAAK,GAACjB,GAAG,CAACG,IAAJ,CAASQ,KAAT,CAAe,CAAf,EAAkBC,SAA5B;AACA,YAAIM,MAAM,GAAClB,GAAG,CAACG,IAAJ,CAASe,MAAT,GAAkB,GAA7B;AACA,YAAIC,MAAM,GAAGnB,GAAG,CAACG,IAAJ,CAASgB,MAAT,GAAkB,GAA/B;AACA,YAAId,IAAI,GAAGL,GAAG,CAACG,IAAJ,CAASC,KAAT,CAAe,CAAf,EAAkBC,IAAlB,CAAuBC,IAAlC;AAEA,YAAIc,aAAa,GAAG,IAAI/B,QAAJ,CAAaoB,GAAb,EAAkBC,EAAlB,EAAsBG,GAAtB,EAA2BC,GAA3B,EAA+BC,MAA/B,EAAuCC,MAAvC,EAA8CC,KAA9C,EAAqDnB,CAArD,EAAwDO,IAAxD,EAA8Da,MAA9D,EAAsEC,MAAtE,CAApB;AAEAxB,QAAAA,GAAG,CAACO,IAAJ,CAASkB,aAAT;AACH,OAtBD,CAuBA,OAAOC,CAAP,EAAU;AACNd,QAAAA,OAAO,CAACC,GAAR,CAAYa,CAAZ;AACH;;AAAA;AACJ;AACJ,GAhCD,CANc,CAwCd;;;AAIA,sBACI;AAAK,IAAA,KAAK,EAAC,KAAX;AAAA,eAECzB,UAAU,EAFX,EAGCD,GAAG,CAAC,CAAD,CAAH,CAAOW,IAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA5DD;;GAAMhB,G;;KAAAA,G;AA8DN,eAAeA,GAAf","sourcesContent":["import axios from \"axios\";\nimport React, { useState } from 'react';\nimport Pokedata from './Pokedata';\n\n\nconst Tri = () => {\n\n    const [pokemonData, setPokemonData] = useState([]);\n    const [pokemonType, setPokemontype] = useState(\"\");\n    var all = [];\n\n    const getPokemon = async () => {\n        const toArray = [];\n        var i = 0;\n\n        for (i = 0; i++; i < 897) {\n            try {\n                const url = `https://pokeapi.co/api/v2/pokemon/${i}`\n                const res = await axios.get(url)\n                toArray.push(res.data);\n                setPokemontype(res.data.types[0].type.name);\n                setPokemonData(toArray);\n                console.log(res)\n\n                var nom=res.data.name;\n                var hp=res.data.stats[0].base_stat;\n                var atk= res.data.stats[1].base_stat;\n                var def=res.data.stats[2].base_stat;\n                var atkSpe=res.data.stats[3].base_stat;\n                var defSpe=res.data.stats[4].base_stat;\n                var speed=res.data.stats[5].base_stat;\n                var weight=res.data.weight / 4.3;\n                var height = res.data.height * 3.9;\n                var type = res.data.types[0].type.name;\n\n                var pokemonActuel = new Pokedata(nom, hp, atk, def,atkSpe, defSpe,speed, i, type, weight, height);\n\n                all.push(pokemonActuel);\n            }\n            catch (e) {\n                console.log(e)\n            };\n        }\n    }\n\n    //alert(\"coucou\");\n\n\n\n    return (\n        <div class=\"App\">\n\n        {getPokemon()}\n        {all[4].name}\n\n            {/*{pokemonData.map((data) => {\n        return (\n            <div className=\"truc\">\n          \n            </div>\n        );\n      })}*/}\n        </div>\n    );\n\n};\n\nexport default Tri;"]},"metadata":{},"sourceType":"module"}